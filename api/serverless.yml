service: comfy

provider:
  name: aws
  runtime: nodejs4.3
  stage: dev
  region: eu-west-1

functions:

## PROJECTS

  projectCreate:
    handler: projects.create
    description: Create a new project
    events:
      - http:
          method: POST
          path: projects
          cors: true

  projectUpdate:
    handler: projects.update
    description: Rename a project
    events:
      - http:
          method: PUT
          path: projects/{id}
          cors: true

  projectRemove:
    handler: projects.remove
    description: Delete a project
    events:
      - http:
          method: DELETE
          path: projects/{id}
          cors: true

## ENVIRONMENTS

  environmentGet:
    handler: environments.get
    description: List environments of a project
    events:
      - http:
          method: GET
          path: projects/{id}/environments
          response:
              headers:
                  X-Total-Count: integration.response.header.X-Total-Count
          cors:
              origins:
                  - '*'
              headers:
                  - Content-Type
                  - X-Amz-Date
                  - Authorization
                  - X-Api-Key
                  - X-Amz-Security-Token
                  - X-Total-Count
              allowCredentials: false

  environmentCreate:
    handler: environments.create
    description: Add a new environment to a project
    events:
      - http:
          method: POST
          path: projects/{id}/environments
          cors: true

  environmentUpdate:
    handler: environments.update
    description: Rename environment of a project
    events:
      - http:
          method: PUT
          path: projects/{id}/environments/{environmentName}
          cors: true

  environmentRemove:
    handler: environments.remove
    description: Delete environment of a project
    events:
      - http:
          method: DELETE
          path: projects/{id}/environments/{environmentName}
          cors: true

## CONFIGURATIONS

  configurationHistory:
    handler: configurations.history
    description: List history of a configuration
    events:
      - http:
          method: GET
          path: projects/{id}/environments/{environmentName}/configurations/{configName}/history
          response:
              headers:
                  X-Total-Count: integration.response.header.X-Total-Count
          cors:
              origins:
                  - '*'
              headers:
                  - Content-Type
                  - X-Amz-Date
                  - Authorization
                  - X-Api-Key
                  - X-Amz-Security-Token
                  - X-Total-Count
              allowCredentials: false
      - http:
          method: GET
          path: projects/{id}/environments/{environmentName}/configurations/history
          response:
              headers:
                  X-Total-Count: integration.response.header.X-Total-Count
          cors:
              origins:
                  - '*'
              headers:
                  - Content-Type
                  - X-Amz-Date
                  - Authorization
                  - X-Api-Key
                  - X-Amz-Security-Token
                  - X-Total-Count
              allowCredentials: false

  configurationGet:
    handler: configurations.get
    description: Get tag version of a configuration
    events:
      - http:
          method: GET
          path: projects/{id}/environments/{environmentName}/configurations/{configName}
          cors: true
      - http:
          method: GET
          path: projects/{id}/environments/{environmentName}/configurations/{configName}/{tagName}
          cors: true

  configurationAdd:
    handler: configurations.create
    description: Add a new version of a configuration
    events:
      - http:
          method: POST
          path: projects/{id}/environments/{environmentName}/configurations/{configName}/{tagName}
          cors: true

  configurationRemove:
    handler: configurations.remove
    description: Remove a configuration
    events:
      - http:
          method: POST
          path: projects/{id}/environments/{environmentName}/configurations/{configName}
          cors: true

## TAGS

  tagAdd:
    handler: tags.create
    description: Add a new tag on a configuration
    events:
      - http:
          method: POST
          path: projects/{id}/environments/{environmentName}/configurations/{configName}/tags
          cors: true

  tagUpdate:
    handler: tags.update
    description: Move a tag
    events:
      - http:
          method: PUT
          path: projects/{id}/environments/{environmentName}/configurations/{configName}/tags/{tagName}
          cors: true

  tagRemove:
    handler: tags.remove
    description: Remove a tag
    events:
      - http:
          method: DELETE
          path: projects/{id}/environments/{environmentName}/configurations/{configName}/tags/{tagName}
          cors: true

plugins:
  - serverless-webpack
  - serverless-offline
custom:
  webpack: ./webpack.config.babel.js
  webpackIncludeModules: true
